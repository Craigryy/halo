openapi: 3.0.0
info:
  title: Halo API
  description: A book inventory API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000
paths:
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
    post:
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
  /user/{public_id}:
    get:
      summary: Get a user by public ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
    delete:
      summary: Delete a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully

  /categories:
    get:
      summary: Get all book categories
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCategoryList'
    post:
      summary: Create a book category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCategory'
      responses:
        '201':
          description: Book category created successfully
  /categories/{id}:
    get:
      summary: Get a book category by ID
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookCategory'
    put:
      summary: Update a book category
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookCategory'
      responses:
        '200':
          description: Book category updated successfully
    delete:
      summary: Delete a book category
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Book category deleted successfully

  /categories/{id}/books:
    post:
      summary: Create a book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book created successfully
    put:
      summary: Update a book
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '200':
          description: Book updated successfully
    delete:
      summary: Delete a book
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Book deleted successfully

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: createuser 
        password:
          type: string
          example: gentlefella 
    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'
    BookCategory:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    BookCategoryList:
      type: array
      items:
        $ref: '#/components/schemas/BookCategory'
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        category:
          $ref: '#/components/schemas/BookCategory'
    BookList:
      type: array
      items:
        $ref: '#/components/schemas/Book'
